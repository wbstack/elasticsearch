name: Docker build

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v4.0.1
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Cache Docker layers
        uses: actions/cache@v3.0.8
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base image
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./forked-bitnami-docker
          file: ./forked-bitnami-docker/Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          tags: bitnami-elasticsearch-fork
          outputs: |
            type=oci,dest=/tmp/oci-base-image.tar
      - name: Extract base image
        run: |
          mkdir -p /tmp/oci-base-image
          tar -xvf /tmp/oci-base-image.tar -C /tmp/oci-base-image
      - name: Build and push
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          file: ./Dockerfile
          build-contexts: |
            bitnami-elasticsearch-fork:local=oci-layout:///tmp/oci-base-image:bitnami-elasticsearch-fork
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
